version: 2.1

parameters:
  do-release:
    type: boolean
    default: false

jobs:
  ci:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package-lock.json" }}

      - run: |
          git config user.email "devin.eldreth@gmail.com"
          git config user.name "Devin Eldreth"

      - run:
          name: Install dependencies
          command: npm ci

      - save_cache:
          key: node-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

      - run:
          name: Run linter
          command: npm run lint

      - run:
          name: Generate Static Site
          command: npm run generate

      - when:
          condition:
            equal: [false, << pipeline.parameters.do-release >>]
          steps:
            - run:
                name: Version and Release RC
                command: |
                  npm run release -- --prerelease --skip.changelog --message "chore(release): %s [ci skip]"

      - when:
          condition:
            equal: [true, << pipeline.parameters.do-release >>]
          steps:
            - run:
                name: Version and Release Production
                command: |
                  npm run release --message "chore(release): %s [ci skip]"

      - run: git push --follow-tags origin main

      - persist_to_workspace:
          root: dist
          paths: .

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    steps:
      - attach_workspace:
          at: .

      - run: sudo pip install awscli

      - run: aws s3 rm s3://staging.deldreth.me --recursive

      - run:
          name: Deploy to Staging
          command: aws s3 sync . s3://staging.deldreth.me/ --acl public-read

      # - run: aws configure set preview.cloudfront true

      # - run:
      #     name: Invalidate CDN
      #     command: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"

workflows:
  version: 2
  ci:
    jobs:
      - ci:
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - ci
          filters:
            tags:
              only: /^v.*/
